(window.webpackJsonp=window.webpackJsonp||[]).push([[194],{791:function(t,s,e){"use strict";e.r(s);var a=e(24),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h3",{attrs:{id:"typescript"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#typescript"}},[t._v("#")]),t._v(" TypeScript")]),t._v(" "),e("h4",{attrs:{id:"_1-ts的原理？为什么会有ts？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-ts的原理？为什么会有ts？"}},[t._v("#")]),t._v(" 1.TS的原理？为什么会有TS？")]),t._v(" "),e("p",[t._v("ts就是js的超集，ts在js的基础上对数据类型进行约束产生的一种新语言，使得代码更加规范，相比于js来说，ts在攥写代码/编译过程中就能够发现错误，而防止在产品上线后发生一些莫名其妙的问题。")]),t._v(" "),e("h4",{attrs:{id:"_2-interface和type的区别是什么？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-interface和type的区别是什么？"}},[t._v("#")]),t._v(" 2.interface和type的区别是什么？")]),t._v(" "),e("p",[t._v("两者的作用都是一样的，都是定义一个类型别名（接口），但是扩展接口的方式有所不同，"),e("code",{staticClass:"default"},[t._v("interface")]),t._v("可以用"),e("code",{staticClass:"default"},[t._v("extends")]),t._v("，"),e("code",{staticClass:"default"},[t._v("type")]),t._v("用"),e("code",{staticClass:"default"},[t._v("&")]),t._v("，如果定义同名的接口，"),e("code",{staticClass:"default"},[t._v("interface")]),t._v("会合并两者，"),e("code",{staticClass:"default"},[t._v("type")]),t._v("不允许定义同名的类型别名")])])}),[],!1,null,null,null);s.default=r.exports}}]);
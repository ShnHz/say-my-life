(window.webpackJsonp=window.webpackJsonp||[]).push([[198],{795:function(a,s,t){"use strict";t.r(s);var e=t(24),v=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h3",{attrs:{id:"webpack"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack"}},[a._v("#")]),a._v(" Webpack")]),a._v(" "),t("h4",{attrs:{id:"_1-webpack-是什么？作用呢？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-webpack-是什么？作用呢？"}},[a._v("#")]),a._v(" 1.Webpack 是什么？作用呢？")]),a._v(" "),t("p",[t("code",{staticClass:"default"},[a._v("webpack")]),a._v("其实就是一个代码编译工具，集成了很多很多功能，其中几个主要的功能就是"),t("strong",[a._v("模块打包")]),a._v("、"),t("strong",[a._v("编译兼容")]),a._v("、"),t("strong",[a._v("能力扩展")])]),a._v(" "),t("h5",{attrs:{id:"模块打包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#模块打包"}},[a._v("#")]),a._v(" 模块打包")]),a._v(" "),t("p",[a._v("就是可以将不同模块的文件打包整合在一起，并且保证它们之间的引用正确，执行有序，并且对文件做一些混淆压缩等功能。")]),a._v(" "),t("h5",{attrs:{id:"编译兼容"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编译兼容"}},[a._v("#")]),a._v(" 编译兼容")]),a._v(" "),t("p",[a._v("就是把写的高版本代码，解析成低版本兼容的代码，从而减少工作量以及提高兼容性。同时把一些预编译文件编译为浏览器能够识别的代码格式，比如 "),t("code",{staticClass:"default"},[a._v("scss => css")]),a._v(" ，"),t("code",{staticClass:"default"},[a._v("vue => html/js/css")]),a._v("，"),t("code",{staticClass:"default"},[a._v("jsx => html/js")])]),a._v(" "),t("h5",{attrs:{id:"能力扩展"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#能力扩展"}},[a._v("#")]),a._v(" 能力扩展")]),a._v(" "),t("p",[a._v("通过"),t("code",{staticClass:"default"},[a._v("webpack")]),a._v("的"),t("code",{staticClass:"default"},[a._v("plugin")]),a._v("机制，我们在实现模块化打包和编译兼容的基础上，可以进一步实现诸如按需加载，代码压缩等一系列功能，帮助我们进一步提高自动化工程化的程度。")]),a._v(" "),t("h4",{attrs:{id:"_2-webpack-loader和plugin的区别？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-webpack-loader和plugin的区别？"}},[a._v("#")]),a._v(" 2.Webpack Loader和Plugin的区别？")]),a._v(" "),t("p",[a._v("loader就是加载器，plugin就是插件")]),a._v(" "),t("p",[a._v("loader：用来转换（翻译）文件，比如把ES6转换为ES5，把SASS转换为CSS，把TS转换为JS")]),a._v(" "),t("p",[a._v("plugin：扩展webpack的功能，比如说压缩文件，打包优化，设置一些环境变量等等")]),a._v(" "),t("h4",{attrs:{id:"_3-如何优化webpack打包的速度？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-如何优化webpack打包的速度？"}},[a._v("#")]),a._v(" 3.如何优化webpack打包的速度？")]),a._v(" "),t("ul",[t("li",[a._v("1.多进程构建（资源并行解析），构建过程中，我们需要使用loader对一些代码、文件、图片进行解析，那把这些解析过程做成并发就会大大提高速度。（thread-loader）")]),a._v(" "),t("li",[a._v("2.多进程压缩，和构建一样，压缩过程也可以并发达到优化速度的目的。")]),a._v(" "),t("li",[a._v("3.利用CDN，可以把一些大的依赖引入CDN。")]),a._v(" "),t("li",[a._v("4.利用缓存，使用cache-loader缓存文件。")])]),a._v(" "),t("h4",{attrs:{id:"_4-如果有个项目，你需要考虑他的缓存机制，应该是怎么样的。js-css-html分别都需要做什么缓存？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-如果有个项目，你需要考虑他的缓存机制，应该是怎么样的。js-css-html分别都需要做什么缓存？"}},[a._v("#")]),a._v(" 4.如果有个项目，你需要考虑他的缓存机制，应该是怎么样的。js/css/html分别都需要做什么缓存？")]),a._v(" "),t("p",[t("code",{staticClass:"default"},[a._v("js")]),a._v("文件比较大，可以做协商缓存；"),t("code",{staticClass:"default"},[a._v("css/html")]),a._v("文件相应的比较小，可以做强缓存。")]),a._v(" "),t("p",[a._v("但其实也要根据项目的具体需求，具体业务去做计划。")]),a._v(" "),t("h4",{attrs:{id:"_5-npm-run-dev-执行过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-npm-run-dev-执行过程"}},[a._v("#")]),a._v(" 5.npm run dev 执行过程")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("npm run dev\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[t("code",{staticClass:"default"},[a._v("dev")]),a._v(" 其实是一个写在配置文件的脚本命令，这边可以修改为任何值")]),a._v(" "),t("p",[a._v("它所执行的代码是 vue3 "),t("code",{staticClass:"default"},[a._v("vite")]),a._v(" ，vue2 "),t("code",{staticClass:"default"},[a._v("vue-cli-service serve")])]),a._v(" "),t("h4",{attrs:{id:"_6-webpack配置优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-webpack配置优化"}},[a._v("#")]),a._v(" 6.Webpack配置优化")]),a._v(" "),t("ul",[t("li",[a._v("1.按需引入@babel/polyfill")]),a._v(" "),t("li",[a._v("2.alias通过创建import或者require的别名")]),a._v(" "),t("li",[a._v("3.减少打包文件")]),a._v(" "),t("li",[a._v("4.提取公共代码")]),a._v(" "),t("li",[a._v("5.externals排除CDN文件")]),a._v(" "),t("li",[a._v("6.Tree Shaking，将死代码剔除")]),a._v(" "),t("li",[a._v("7.运用缓存，cache-loader")]),a._v(" "),t("li",[a._v("8.多进程配置，解析js、css、图片、字体等等")])])])}),[],!1,null,null,null);s.default=v.exports}}]);